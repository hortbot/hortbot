package fakeirc

import (
	"crypto/tls"
	"crypto/x509"

	"github.com/hortbot/hortbot/internal/pkg/must"
)

// From the TLS docs.
const (
	certPem = `
-----BEGIN CERTIFICATE-----
MIIFazCCA1OgAwIBAgIUKljaIXLRMZ2zJTWaDPA/3vXnr8AwDQYJKoZIhvcNAQEL
BQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM
GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0xOTAzMDUwNTU0MjZaFw0yOTAz
MDIwNTU0MjZaMEUxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEw
HwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQwggIiMA0GCSqGSIb3DQEB
AQUAA4ICDwAwggIKAoICAQDJVnZwafSsSE5JVcZhi+HJ45FjtBPMqvQGUXMEDstK
XqrpzRZRTko3jiOdtscIGmqam/p/BrIqJGB+iaGf9P+DO8dIWVMtWToXFhxF7eDL
CnjNaYndO9DwN+txkteRD928ipeRSmxZtm3ox0yUHkGHwCddmrCPJTlb/i5ULt8P
WqHJZ24MtQLArfrvt73QpQ5ARyvRvrvhAjaak7Z4SjypB0wKHekyfkfkFbE6Dt/J
/6Lly9bYVNapDF+kEUHVCCzQEq6YerK01Fb9LnRY9Wl99kAIHnS+wp1ly+eNp361
5z0lOSQ97oIsCvTyuBgPGu2l2xWRqtfhsMd9q29CawodZ2hf2p28f21RaZj/xIST
mlfTZrJVxQx2j1lcWouSwYy2+REtUxEZ4BWfW3j52tkKQZNQYLa2o9kwN4m6jX8m
seihilsnTlCEhCs3E7CpJRBKJ5xRRuXaL/k9Qddtcdrvr0r6MFCjors3BTExIa/W
0fmOO/Vza7jTldnxQy7/D06t/pXNsECwBjXq5hUAJULzM1YSEoSrNtUsDDXBImUG
E/bf1Ag30UiLrkk3giFENEn9zyrVtiGWMk7NZH3bCPXdbR28KLHZDHLXr9LE7J6d
pvl3GiKwtxA0Um9z7FOTTCh2USVSlkW6SNHPnsv8t3gWKDULiSbETHRrxrzu86rY
iQIDAQABo1MwUTAdBgNVHQ4EFgQUqWl7N3a2XsQAARcm8GHH7N3Fl4kwHwYDVR0j
BBgwFoAUqWl7N3a2XsQAARcm8GHH7N3Fl4kwDwYDVR0TAQH/BAUwAwEB/zANBgkq
hkiG9w0BAQsFAAOCAgEAoSKoyVdexXAZPLqV1rY3V7mP0Qjhfkp7g7nWaG5lP/ma
wfow3yyAFUbj1oY4MoAFHf8hJuDavxuskzIgYs3WrQazbAQN0H2DOI8tttRBEoFK
hOJ8wN7f3GwJOpTar2kRZeHJ0P3DkgKNgaNNzlfTHCAuAMJIhC8LEyHQrhtM4vg/
BhXZafx3eGOSchV2SemKwUK893dsod9zJBiCWexeZEPaDTbx3+tibR41FU2yqrHY
6YaGxhnlwXk3mL8likaMvZYhTIYFlkwCoZE8fRlN3GuNh27RDex4e1vN3EmNeqK0
VxMSBlNGhhfFOW3j3qblur3B/FAqvUdyFJqO0maYneEC/4OmblSTgVQdYy+CDjAD
nH1vyyRqhi4mjw1HpRqiUhSgIAAVbe1RLVmCLG+hXBB7tIwDon8zctqJMBUDwu3y
52YasOCTHnw+pOgB5v86BEZ0iFSL8QtMuF0cDzkTOTbMAP+ZMXmKVvufqX9gLQLP
UbuzUaTwxgiVdDPidDeD286dunlNk6wYW+LhprJNCSa92GtEBEDw0NhZ0n1CPn1c
zR3TB7rY1omeNiKZ199PJOelbJpEUtARdpV+olmnoO2G3J2N9o79haZeyNCWBAJr
obp4KCZj/ujnC09Kb/TE32x1G7VbKYeDVqmmnDlSB4gfMjeVOL0GmSjziVl/fYs=
-----END CERTIFICATE-----`

	keyPem = `
-----BEGIN PRIVATE KEY-----
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
pJK982Q15hS/Js/3YKVH564yjXAGOA==
-----END PRIVATE KEY-----`
)

var testCert, certPool = setupCerts()

// TLSConfig is a TLS configuration that can be used for testing.
// The fake IRC server will use this config to authenticate incoming connections
// when using TLS.
var TLSConfig = &tls.Config{
	InsecureSkipVerify:       true, //nolint:gosec
	ClientAuth:               tls.RequireAndVerifyClientCert,
	Certificates:             []tls.Certificate{testCert},
	PreferServerCipherSuites: true,
	ClientCAs:                certPool,
	RootCAs:                  certPool,
} // #nosec G402

func setupCerts() (tls.Certificate, *x509.CertPool) {
	testCert := must.Must(tls.X509KeyPair([]byte(certPem), []byte(keyPem)))

	certPool := x509.NewCertPool()
	certPool.AppendCertsFromPEM([]byte(certPem))

	return testCert, certPool
}
