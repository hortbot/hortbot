{% code
type DocsPage struct {
    BasePage
}
%}

{% func (p *DocsPage) PageTitle() %}
{%= p.PageBrand() %} - Documentation
{% endfunc %}

{% func (p *DocsPage) PageMeta() %}
{%= p.BasePage.PageMeta() %}
{%= sidebarStyle() %}
<style>
h3.title {
    padding-top: 1rem;
}

dt {
    padding-top: 1rem;
}

dd {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
}

.tag {
    margin-left: 1rem;
    height: 1.5rem !important;
    padding-left: 0.5rem !important;
    padding-right: 0.5rem !important;
}
</style>
{% endfunc %}

{% func (p *DocsPage) PageBody() %}
<div class="columns is-fullheight is-clipped">
    <div class="is-sidebar-menu is-hidden-mobile" id="sidebar">
        <aside class="menu">
            <p class="menu-label">
                General
            </p>
            <ul class="menu-list">
                <li><a href="#commands">Commands</a></li>
            </ul>

            <p class="menu-label">
                Custom commands
            </p>
            <ul class="menu-list">
                <li><a href="#triggers">Triggers</a></li>
                <li><a href="#repeats">Repeats</a></li>
                <li><a href="#schedule">Schedule</a></li>
                <li><a href="#autoreplies">Autoreplies</a></li>
                <li><a href="#lists">Lists</a></li>
                <li><a href="#variables">Variables</a></li>
            </ul>

            <p class="menu-label">
                Moderation
            </p>
            <ul class="menu-list">
                <li><a href="#shortcuts">Shortcuts</a></li>
                <li><a href="#ignores">Ignores</a></li>
                <li><a href="#user-levels">User levels</a></li>
            </ul>

            <p class="menu-label">
                Fun
            </p>
            <ul class="menu-list">
                <li><a href="#general-fun">General fun</a></li>
                <li><a href="#quotes">Quotes</a></li>
            </ul>

            <p class="menu-label">
                Utilities
            </p>
            <ul class="menu-list">
                <li><a href="#general-utilities">General utilities</a></li>
                <li><a href="#twitch">Twitch</a></li>
                <li><a href="#raffles">Raffles</a></li>
            </ul>

            <p class="menu-label">
                Settings
            </p>
            <ul class="menu-list">
                <li><a href="#general-settings">General settings</a></li>
                <li><a href="#roll-settings">Roll</a></li>
            </ul>

            <p class="menu-label">
                Filters
            </p>
            <ul class="menu-list">
                <li><a href="#filters">General filters</a></li>
                <li><a href="#filter-links">Links</a></li>
                <li><a href="#filter-capitals">Capitals</a></li>
                <li><a href="#filter-banned">Banned phrases</a></li>
                <li><a href="#filter-symbols">Symbols</a></li>
                <li><a href="#filter-emotes">Emotes</a></li>
            </ul>

            <p class="menu-label">
                Command actions
            </p>
            <ul class="menu-list">
                <li><a href="#actions">Actions</a></li>
            </ul>
        </aside>
    </div>

                    
    <div class="column is-main-content content" id="main">
        <h1 class="title">Documentation</h1>

        <p>
            This page contains documentation for all of {%= p.PageBrand() %}'s features.
            Note that <code>!</code> is used as a prefix in the documentation, but may differ
            per channel.
        </p>

        <hr>

        <h2 class="title">General</h2>

        <section id="commands" class="page">
            <h3 class="title">Commands</h3>

            <dl>
                {%= command("!join", `Tells ` + p.Brand + ` to join your channel. Must be executed in the bot's channel.`, "everyone") %}
                {%= command("!part", `Tells ` + p.Brand + ` to leave your channel. In a non-bot channel, only the broadcaster may use this command.`, "everyone") %}
                {%= command("!bothelp", `Returns a helpful message.`, "everyone") %}
            </dl>
        </section>

        <hr>
        <h2 class="title">Custom commands</h2>

        <section id="triggers" class="page">
            <h3 class="title">Triggers</h3>

            <dl>
                {%= command(
                    "!commands",
                    `Links to the list of commands for the channel.`,
                    "subs",
                ) %}
                {%= command(
                    "!command add <name> <text>",
                    `Creates a command <code>!name</code> that responds with the specified text.`,
                    "mods",
                    `By default, commands are available to subs. Using <code>adda</code> or <code>addm</code> instead of <code>add</code> will pre-restrict the command to all users or moderators, respectively.`,
                    `Example: <code>!command add pan FOUND THE (_PARAMETER_CAPS_), HAVE YE?</code> &mdash; Adds a command called "pan".`,
                    `Example: <code>!command adda useful Here's some useful info: example.org</code> &mdash; Adds a command available to all users immediately.`,
                ) %}
                {%= command(
                    "!command delete <name>",
                    `Deletes a command.`,
                    "mods",
                    `Example: <code>!command delete pan</code> &mdash; Deletes the command called "pan".`,
                ) %}
                {%= command(
                    "!command restrict <name> all|subs|vips|mods|owner",
                    `Restricts a command to a specific group.`,
                    "mods",
                    `Example: <code>!command restrict pan mods</code> &mdash; Restricts "pan" to moderators and above.`,
                ) %}
                {%= command(
                    "!command editor <name>",
                    `Gets the last editor of a command.`,
                    "mods",
                    `Example: <code>!command editor pan</code> &mdash; Gets the last editor of the "pan" command.`,
                ) %}
                {%= command(
                    "!command count <name>",
                    `Gets the number of times a command has been run.`,
                    "mods",
                    `Example: <code>!command count pan</code> &mdash; Gets the number of times the "pan" command have been used.`,
                ) %}
                {%= command(
                    "!command rename <old> <new>",
                    `Renames a command.`,
                    "mods",
                    `Example: <code>!command rename pan oldpan</code> &mdash; Renames the command "pan" to "oldpan".`,
                ) %}
                {%= command(
                    "!command get <name>",
                    `Gets the response for a command.`,
                    "mods",
                    `Example: <code>!command get pan</code> &mdash; Gets the response for the "pan" command.`,
                ) %}
                {%= command(
                    "!command clone #<channel> <name>",
                    `Clones a command from another channel into this channel.`,
                    "mods",
                    `Example: <code>!command clone #coestar pan</code> &mdash; Clones the "pan" command into the current channel as "pan".`,
                ) %}
                {%= command(
                    "!command exec <command string>",
                    `Executes the command string. Can be used to quickly test some commands before adding them`,
                    "mods",
                    `Example: <code>!command exec The time in Chicago is (_TIME_America/Chicago_). </code>`,
                ) %}
            </dl>
        </section>

        <section id="repeats" class="page">
            <h3 class="title">Repeats</h3>
            
            <p>
                The repeat command sets up a command repetition. When enabled,
                the bot will repeat every X seconds so long as Y messages have
                passed.
            </p>

            <dl>
                {%= command(
                    "!repeat add <name> <delay in seconds> [message difference]",
                    `Sets a command to repeat, and enables it.`,
                    "mods",
                    `Example: <code>!repeat add discord 300 10</code> &mdash; Sets the command "discord" to repeat every 300 seconds if at least 10 messages have passed.`,
                ) %}
                {%= command(
                    "!repeat delete <name>",
                    `Deletes a command's repeat info.`,
                    "mods",
                    `Example: <code>!repeat delete discord</code> &mdash; Stops repeating the "discord" command and deletes its repeat info.`,
                ) %}
                {%= command(
                    "!repeat on|off <name>",
                    `Enables or disables a command's repetition.`,
                    "mods",
                    `Example: <code>!repeat on discord</code> &mdash; Enables repetition of the "discord" command.`,
                ) %}
                {%= command(
                    "!repeat list",
                    `Lists command repetition info.`,
                    "mods",
                ) %}
            </dl>
        </section>

        <section id="schedule" class="page">
            <h3 class="title">Schedule</h3>

            <p>
                The schedule command sets up a command repetition via a <a href="https://crontab.guru/" target="_blank">cron expression</a>.
                Like repeated commands, a message difference can be specified.
            </p>

            <dl>
                {%= command(
                    "!schedule add <name> <pattern> [message difference]",
                    `Schedules a command, and enables it.`,
                    "mods",
                    `Example: <code>!schedule add discord *_5_*_*_*</code> &mdash; Schedules the command "discord" to at 5AM every day.`,
                    `Example: <code>!schedule add discord hourly 10</code> &mdash; Schedules the command "discord" to run hourly if at least 10 messages have passed.`,
                ) %}
                {%= command(
                    "!schedule delete <name>",
                    `Deletes a command's schedule.`,
                    "mods",
                    `Example: <code>!schedule delete discord</code> &mdash; Unschedules the "discord" command and deletes its schedule.`,
                ) %}
                {%= command(
                    "!schedule on|off <name>",
                    `Enables or disables a command's repetition.`,
                    "mods",
                    `Example: <code>!schedule on discord</code> &mdash; Enables the schedule of the "discord" command.`,
                ) %}
                {%= command(
                    "!schedule list",
                    `Lists command schedules.`,
                    "mods",
                ) %}
            </dl>
        </section>

        <section id="autoreplies" class="page">
            <h3 class="title">Autoreplies</h3>

            <p>
                Autoreplies are like custom commands, but are run when a message matches a pattern.
            </p>

            <dl>
                {%= command(
                    "!autoreply add <pattern> <response>",
                    `Adds an autoreply which will respond with the provided response when a message matches the pattern.`,
                    "mods",
                    `In the pattern, spaces should be replaced with underscores.`,
                    `Example: <code>!autoreply add *what*game* This is (_GAME_).</code> &mdash; Adds an autoreply that will reply with the current game if a message matches the pattern "*what*game".`,
                    `Example: <code>!autoreply add REGEX:^too_many_[^_]+$ TOO MANY COOKS (_REGULARS_ONLY_)</code> &mdash; Adds an autoreply which uses a raw regex pattern.`,
                ) %}
                {%= command(
                    "!autoreply delete <num>",
                    `Removes an autoreply.`,
                    "mods",
                    `Note that deleting an autoreply that isn't the last does not shift the numbers down. Use <code>!autoreply compact</code> to do this.`,
                ) %}
                {%= command(
                    "!autoreply editresponse <num> <response>",
                    `Edits an autoreply's response.`,
                    "mods",
                ) %}
                {%= command(
                    "!autoreply editpattern <num> <pattern>",
                    `Edits an autoreply's pattern.`,
                    "mods",
                    `In the pattern, spaces should be replaced with underscores.`,
                ) %}
                {%= command(
                    "!autoreply compact <num>",
                    `Compacts autoreplies "num" and higher. This is useful after removing an autoreply in the middle of the list.`,
                    "mods",
                ) %}
                {%= command(
                    "!autoreply list",
                    `Links to the list of autoreplies for the channel.`,
                    "mods",
                ) %}
            </dl>
        </section>

        <section id="lists" class="page">
            <h3 class="title">Lists</h3>

            <p>
                Lists are collections of command-like responses, which can be accessed directly, or via the <code>(_LIST_&lt;name&gt;_RANDOM_)</code> action.
                They share the same namespace as custom commands, and may contain command actions themselves.
            </p>

            <dl>
                {%= command(
                    "!list add <name>",
                    `Adds a list.`,
                    "mods",
                    `By default, lists are available to subs. Using <code>adda</code> or <code>addm</code> instead of <code>add</code> will pre-restrict the list to all users or moderators, respectively.`,
                    `Example: <code>!list add hatspells</code> &mdash; Adds a list called "hatspells".`,
                ) %}
                {%= command(
                    "!list delete <name>",
                    `Removes a list.`,
                    "mods",
                ) %}
                {%= command(
                    "!list restrict <name> all|subs|vips|mods|owner",
                    `Restricts a list.`,
                    "mods",
                ) %}
                {%= command(
                    "!list rename <old> <new>",
                    `Renames a list.`,
                    "mods",
                ) %}
                {%= command(
                    "!<name>",
                    `Gets a random item from the list. Or use <code>!&lt;name&gt; random</code>.`,
                    "varies",
                ) %}
                {%= command(
                    "!<name> add <item>",
                    `Adds an item to the named list.`,
                    "mods",
                    `Example: <code>!hatspells add Solar Eruption</code> &mdash; Adds "Solar Eruption" to the "hatspells" list.`,
                ) %}
                {%= command(
                    "!<name> delete <item>",
                    `Removes an item from the named list.`,
                    "mods",
                    `Example: <code>!hatspells remove Solar Eruption</code> &mdash; Removes "Solar Eruption" from the "hatspells" list.`,
                ) %}
                {%= command(
                    "!<name> restrict",
                    `Same as <code>!list restrict &lt;name&gt;</code>.`,
                    "mods",
                ) %}
                {%= command(
                    "!<name> get <num>",
                    `Gets a specific item from the list.`,
                    "varies",
                ) %}
            </dl>
        </section>

        <section id="variables" class="page">
            <h3 class="title">Variables</h3>

            <p>
                Variables store persistent information between commands, and are accessible directly or through actions.
            </p>

            <dl>
                {%= command("!var set <name> <value>", `Sets a variable.`, "mods") %}
                {%= command("!var get <name>", `Gets a variable's value.`, "mods") %}
                {%= command("!var delete <name>", `Removes a variable.`, "mods") %}
                {%= command("!var increment <name> <amount>", `Increments a variable as an integer.`, "mods") %}
                {%= command("!var decrement <name> <amount>", `Decrements a variable as an integer.`, "mods") %}
            </dl>
        </section>

        <hr>
        <h2 class="title">Moderation</h2>

        <section id="shortcuts" class="page">
            <h3 class="title">Shortcuts</h3>

            <dl>
                {%= command("+b <user>", `Bans a user.`, "mods") %}
                {%= command("-b <user>", `Unbans a user.`, "mods") %}
                {%= command("+t <user> [seconds]", `Times out a user (with an optional duration).`, "mods") %}
                {%= command("-t <user>", `Removes a user's timeout.`, "mods") %}
                {%= command("+p <user>", `Purges a user's messages.`, "mods") %}
                {%= command("!permit <user>", `Permits a user to post one link.`, "mods") %}
                {%= command("!clear", `Clears chat.`, "mods") %}
                {%= command("+m", `Turns slow mode on.`, "mods") %}
                {%= command("-m", `Turns slow mode off.`, "mods") %}
                {%= command("+s", `Turns sub only mode on.`, "mods") %}
                {%= command("-s", `Turns sub only mode off.`, "mods") %}
            </dl>
        </section>

        <section id="ignores" class="page">
            <h3 class="title">Ignores</h3>

            <p>
                Ignored users may not use {%= p.PageBrand() %}, but will still be subject to filters.
            </p>

            <dl>
                {%= command("!ignore add <user>", `Adds a user to the ignore list.`, "mods") %}
                {%= command("!ignore delete <user>", `Removes a user from the ignore list.`, "mods") %}
                {%= command("!ignore list", `Lists users in the ignore list.`, "mods") %}
            </dl>
        </section>

        <section id="user-levels" class="page">
            <h3 class="title">User levels</h3>

            <p>
                Custom user levels reclassify users to have different levels. Regulars are equivalent
                to subscribers, owners are equivalent to the channel broadcaster, and mods are mods.
            </p>

            <dl>
                {%= command("!regular list", `Lists regulars.`, "mods") %}
                {%= command("!regular add|remove <user>", `Adds or removes a user from the regular list.`, "mods") %}
                {%= command("!owner|mod list", `Lists users in that group.`, "broadcaster") %}
                {%= command("!owner|mod add|remove <user>", `Adds or removes a user from a list.`, "broadcaster") %}
            </dl>
        </section>

        <hr>
        <h2 class="title">Fun</h2>

        <section id="general-fun" class="page">
            <h3 class="title">General fun</h3>

            <dl>
                {%= command("!conch", `Magic 8 ball.`, "subs") %}
                {%= command("!winner", `Picks a random chat member.`, "mods") %}
                {%= command("!xkcd <num>", `Gets the requested XKCD comic.`, "subs") %}
                {%= command("!random coin", `Flips a coin.`, "varies") %}
                {%= command("!random <integer>", `Picks a random number.`, "varies") %}
                {%= command("!roll <dice>", `Rolls the specified dice.`, "varies", `Example: <code>!roll 2d20</code> &mdash; Rolls two D20s.`) %}
                {%= command("!google <query>", `Googles something.`, "subs") %}
                {%= command("!link <query>", `Links something.`, "subs") %}
                {%= command("!me <phrase>", `Sends a /me command.`, "mods") %}
                {%= command("!urban <phrase>", `Looks up something in the Urban Dictionary. Be warned, these are not filtered.`, "subs") %}
            </dl>
        </section>

        <section id="quotes" class="page">
            <h3 class="title">Quotes</h3>

            <dl>
                {%= command("!quote", `Gets a random quote.`, "subs") %}
                {%= command(
                    "!quote add <quote>",
                    `Adds a quote.`,
                    "mods",
                    `Example: <code>!quote add "This is a quote!"</code> &mdash; Adds a the quote "This is a quote!".`,
                ) %}
                {%= command(
                    "!quote delete <num>",
                    `Removes a quote.`,
                    "mods",
                    `Note that deleting a quote that isn't the last does not shift the numbers down. Use <code>!quote compact</code> to do this.`,
                ) %}
                {%= command(
                    "!quote get <num>",
                    `Gets a quote.`,
                    "subs",
                ) %}
                {%= command(
                    "!quote random",
                    `Gets a random quote.`,
                    "subs",
                ) %}
                {%= command(
                    "!quote getindex <exact quote>",
                    `Returns the number of the exact quote specified.`,
                    "subs",
                ) %}
                {%= command(
                    "!quote edit <num> <quote>",
                    `Edts a quote.`,
                    "mods",
                ) %}
                {%= command(
                    "!quote search <phrase>",
                    `Searches all quotes for a phrase.`,
                    "mods",
                ) %}
                {%= command(
                    "!quote editor <num>",
                    `Gets the username of the last editor of the quote.`,
                    "subs",
                ) %}
                {%= command(
                    "!quote compact <num>",
                    `Compacts quotes "num" and higher. This is useful after removing a quote in the middle of the list.`,
                    "mods",
                ) %}
            </dl>
        </section>

        <hr>
        <h2 class="title">Utilities</h2>

        <section id="general-utilities" class="page">
            <h3 class="title">General utilities</h3>

            <dl>
                {%= command("!lastfm", `Links to the channel's LastFM profile.`, "everyone") %}
                {%= command("!music", `Gets the currently playing song.`, "everyone") %}
                {%= command("!songlink", `Gets a link to the currently playing song.`, "everyone") %}
                {%= command("!whatshouldiplay", `Picks a random game from the channel's Steam library.`, "broadcaster") %}
                {%= command("!channelid", `Gets the channel's Twitch ID.`, "everyone") %}
                {%= command("!ht", `Creates a highlight (viewable on the channel page).`, "everyone") %}
                {%= command("!highlightthat", `Same as <code>!ht</code>.`, "everyone") %}
                {%= command("!#<channel>/<command>", `Runs a command from another channel.`, "broadcaster") %}
                {%= command("!hltb", `Fetches the HowLongToBeat time for the current game, or an arbitrary game with a parameter.`, "subs") %}
            </dl>
        </section>

        <section id="twitch" class="page">
            <h3 class="title">Twitch</h3>

            <dl>
                {%= command("!game", `Gets the current game.`, "everyone") %}
                {%= command("!game <new game>", `Sets the current game. Only valid game names are allowed, but the bot will autocorrect or suggest game names when possible.`, "mods") %}
                {%= command("!status", `Gets the current status.`, "everyone") %}
                {%= command("!status <new status>", `Sets the current status.`, "mods") %}
                {%= command("!uptime", `Gets the current uptime.`, "everyone") %}
                {%= command("!viewers", `Gets the current viewer count.`, "everyone") %}
                {%= command("!chatters", `Gets the current chatter count.`, "everyone") %}
                {%= command("!ishere <user>", `Checks if a user is in chat.`, "mods") %}
                {%= command("!islive <user>", `Checks if a user is live.`, "mods") %}

                {%= command("!statusgame <new status>", `Sets the current game to the current Steam game. and sets the status.`, "mods") %}
                {%= command("!steamgame", `Sets the current game to the current Steam game.`, "mods") %}
            </dl>
        </section>

        <section id="raffles" class="page">
            <h3 class="title">Raffles</h3>

            <dl>
                {%= command("!raffle", `Enters into the active raffle.`, "everyone") %}
                {%= command("!raffle enable|disable", `Enables/disables the raffle. Enabling the raffle clears the previous entries.`, "mods") %}
                {%= command("!raffle reset", `Resets the raffle entries.`, "mods") %}
                {%= command("!raffle count", `Counts the number of raffle entries.`, "mods") %}
                {%= command("!raffle winner", `Picks a random winner.`, "mods") %}
                {%= command("!raffle winner <X>", `Picks &lt;X&gt; random winners.`, "mods") %}
            </dl>
        </section>

        <hr>
        <h2 class="title">Settings</h2>

        <section id="general-settings" class="page">
            <h3 class="title">General settings</h3>

            <dl>
                {%= command("!set prefix <prefix>", `Sets the prefix used to access commands.`, "broadcaster") %}
                {%= command("!set bullet <bullet>", `Sets the bullet prepended to all bot messages.`, "broadcaster") %}
                {%= command("!set cooldown <seconds>", `Sets the command cooldown.`, "mods") %}
                {%= command("!set shouldModerate on|off", `Enables moderation.`, "mods") %}
                {%= command("!set lastfm off|<name>", `Sets the channel's LastFM profile name.`, "mods") %}
                {%= command("!set enableWarnings on|off", `Enable warnings before moderation actions.`, "mods") %}
                {%= command("!set displayWarnings on|off", `Show warnings on warns.`, "mods") %}
                {%= command("!set timeoutDuration <seconds>", `Sets the moderation timeout duration.`, "mods") %}
                {%= command("!set extraLifeID <ID>", `Sets the Extra-Life ID.`, "mods") %}
                {%= command("!set subsMayLink on|off", `Allow subscribers to link.`, "mods") %}
                {%= command("!set mode all|subs|vips|mods|owner", `Sets the minimum user level for the bot to respond to.`, "mods") %}
                {%= command("!set steam <ID>", `Sets the channel's Steam ID.`, "mods") %}
                {%= command("!set urban on|off", `Enables/disables the urban command.`, "mods") %}
                {%= command("!set tweet <message>", `Sets the ClickToTweet message.`, "mods") %}
            </dl>
        </section>

        <section id="roll-settings" class="page">
            <h3 class="title">Roll</h3>

            <dl>
                {%= command("!set roll default <num>", `Set the default roll amount.`, "mods") %}
                {%= command("!set roll cooldown <seconds>", `Set the roll cooldown.`, "mods") %}
                {%= command("!set roll userlevel all|subs|vips|mods|owner", `Set the minimum user level for roll/random.`, "mods") %}
            </dl>
        </section>

        <hr>
        <h2 class="title">Filters</h2>

        <section id="general-filters" class="page">
            <h3 class="title">General filters</h3>

            <dl>
                {%= command("!filter on|off", `Enables/disables all filters.`, "mods") %}
                {%= command("!filter status", `Shows the status of all filters.`, "mods") %}
                {%= command("!filter me on|off", `Enables/disables the /me filter.`, "mods") %}
                {%= command("!filter messagelength <length>", `Sets the maximum message length.`, "mods") %}
                {%= command("!filter exempt all|subs|vips|mods|owner", `Sets the minimum user level that will be exempt from filters. Defaults to subs, and cannot be higher than mods. For historical reasons, link filtering is controlled by subsMayLink.`, "mods") %}
            </dl>
        </section>

        <section id="filter-links" class="page">
            <h3 class="title">Links</h3>

            <dl>
                {%= command("!filter links on|off", `Toggles link filtering.`, "mods") %}
                {%= command(
                    "!filter pd add|delete <link pattern>",
                    `Toggles link filtering.`,
                    "mods",
                    `Link patterns can just be domains, or contain wildcard characters.`,
                    `Example: <code>!filter pd add clips.twitch.tv</code> &mdash; Allow old-style Twitch clip links.`,
                    `Example: <code>!filter pd add twitch.tv/*/clips</code> &mdash; Allow new-style Twitch clip links.`,
                ) %}
                {%= command("!filter pd list", `Lists permitted links.`, "mods") %}
            </dl>
        </section>

        <section id="filter-capitals" class="page">
            <h3 class="title">Capitals</h3>

            <dl>
                {%= command("!filter caps on|off", `Toggles caps filtering.`, "mods") %}
                {%= command("!filter caps status", `Shows caps filter status.`, "mods") %}
                {%= command("!filter percent <percent>", `Sets minimum caps percentage to be filtered.`, "mods") %}
                {%= command("!filter mincaps <num>", `Sets minimum caps count to be filtered.`, "mods") %}
                {%= command("!filter minchars <num>", `Sets minimum message length to be filtered.`, "mods") %}
            </dl>
        </section>

        <section id="filter-banned" class="page">
            <h3 class="title">Banned phrases</h3>

            <dl>
                {%= command("!filter banphrase on|off", `Toggles banned phrase filtering.`, "mods") %}
                {%= command("!filter banphrase list", `Lists banned phrases.`, "mods") %}
                {%= command("!filter banphrase add|delete <phrase>", `Adds/removes a banned phrase.`, "mods") %}
            </dl>
        </section>

        <section id="filter-symbols" class="page">
            <h3 class="title">Symbols</h3>

            <dl>
                {%= command("!filter symbols on|off", `Toggles symbol filtering.`, "mods") %}
                {%= command("!filter symbols status", `Shows symbol filter status.`, "mods") %}
                {%= command("!filter symbols percent <percent>", `Sets minimum symbol percentage to be filtered.`, "mods") %}
                {%= command("!filter symbols min <num>", `Sets minimum symbol count to be filtered.`, "mods") %}
            </dl>
        </section>

        <section id="filter-emotes" class="page">
            <h3 class="title">Emotes</h3>

            <dl>
                {%= command("!filter emotes on|off", `Toggles emote filtering.`, "mods") %}
                {%= command("!filter emotes max <num>", `Sets max emotes allowed per message.`, "mods") %}
                {%= command("!filter emotes single on|off", `Toggles filter for single emote messages.`, "mods") %}
            </dl>
        </section>

        <hr>
        
        <section id="actions" class="page">
            <h2 class="title">Actions</h2>

            <p>
                These actions can be used in custom commands and list commands. Actions may be nested, for example:
            </p>

            <pre>(_TEXTAPI_https://duckduckgo.com/?q=(_QESC_(_P_)_)_)</pre>


            <h3>Common</h3>

            <dl>
                {%= action("PARAMETER", `The next command parameter (split by semicolon).`) %}
                {%= action("P", `Same as <code>PARAMETER</code>.`) %}

                {%= action("PARAMETER_CAPS", `The next command parameter, in all caps.`) %}
                {%= action("P_CAPS", `Same as <code>PARAMETER_CAPS</code>.`) %}

                {%= action("PARAMETER_OR_<DEFAULT>", `The next command parameter, or a default value if empty.`) %}
                {%= action("P_OR_<DEFAULT>", `Same as <code>PARAMETER_OR_&lt;DEFAULT&gt;</code>.`) %}

                {%= action("PARAMETER_<X>", `Parameter &lt;X&gt;.`) %}
                {%= action("P_<X>", `Same as <code>PARAMETER_&lt;X&gt;</code>.`) %}

                {%= action("PARAMETER_<X>_OR_<DEFAULT>", `Parameter &lt;X&gt;, or a default value if empty.`) %}
                {%= action("P_<X>_OR_<DEFAULT>", `Same as <code>PARAMETER_&lt;X&gt;_OR_&lt;DEFAULT&gt;</code>.`) %}

                {%= action("PARAMETER_<X>_CAPS", `Parameter &lt;X&gt;, in all caps.`) %}
                {%= action("P_<X>_CAPS", `Same as <code>PARAMETER_&lt;X&gt;_CAPS</code>.`) %}

                {%= action("CAPS_<X>", `Makes &lt;X&gt; all caps.`) %}

                {%= action("USER", `The user's name.`) %}
                {%= action("USER_DISPLAY", `The user's display name.`) %}
                {%= action("ONLINE_CHECK", `If offline, the command is disabled.`) %}
                {%= action("GAME", `The current game.`) %}
                {%= action("GAME_CLEAN", `The current game, URL-safe.`) %}
                {%= action("GAME_IS_<GAME>", `If present and the current game is not <code>&lt;GAME&gt;</code>, then the command will stop. Note that this cannot be used with nesting, e.g. you cannot do <code>(_GAME_IS_(_PARAMETER_)_)</code>.`) %}
                {%= action("GAME_IS_NOT_<GAME>", `Inverse of <code>GAME_IS_&lt;GAME&gt;</code>.`) %}
                {%= action("GAME_LINK", `A link to the current game, at its relevent game store.`) %}
                {%= action("STATUS", `The current stream status.`) %}
                {%= action("VIEWERS", `The current viewer count.`) %}
                {%= action("CHATTERS", `The current chatter count.`) %}
                {%= action("QUOTE", `A random quote.`) %}
                {%= action("RANDOM_<MIN>_<MAX>", `A random number between &lt;MIN&gt; and &lt;MIN&gt;, up to one decimal place.`) %}
                {%= action("RANDOM_INT_<MIN>_<MAX>", `A random integer between &lt;MIN&gt; and &lt;MIN&gt;.`) %}
                {%= action("QUIET_<X>", `Evaluates to the empty string, ignoring the value of &lt;X&gt;. Useful to silence actions with side effects, such as variable setting.`) %}
            </dl>

            <h3>Moderation</h3>

            <dl>
                {%= action("SUBMODE_ON", `Enables submode.`) %}
                {%= action("SUBMODE_OFF", `Disables submode.`) %}
                {%= action("PURGE", `Purges the messages of the user in the first parameter, or the sender if used in an autoreply.`) %}
                {%= action("BAN", `Bans the user in the first parameter, or the sender if used in an autoreply, and returns the user.`) %}
                {%= action("TIMEOUT", `Times out the user in the first parameter, or the sender if used in an autoreply, and returns the user.`) %}
                {%= action("DELETE", `Deletes the message if used in an autoreply, and returns the user.`) %}
                {%= action("REGULARS_ONLY", `Only allow regulars (subs) to use the command.`) %}
            </dl>

            <h3>Date and time</h3>

            <dl>
                {%= action("DATE", `The current date, UTC.`) %}
                {%= action("DATE_<TZ>", `The current date, in the specified timezone (like "America/Chicago" or "MST").`) %}
                {%= action("TIME", `The current time, UTC.`) %}
                {%= action("TIME_<TZ>", `The current time, in the specified timezone (like "America/Chicago" or "MST").`) %}
                {%= action("TIME24", `The current 24-hour time, UTC.`) %}
                {%= action("TIME24_<TZ>", `The current 24-hour time, in the specified timezone (like "America/Chicago" or "MST").`) %}
                {%= action("DATETIME", `The current date and time, UTC.`) %}
                {%= action("DATETIME_<TZ>", `The current date and time, in the specified timezone (like "America/Chicago" or "MST").`) %}
                {%= action("DATETIME24", `The current date and 24-hour time, UTC.`) %}
                {%= action("DATETIME24_<TZ>", `The current date and 24-hour time, in the specified timezone (like "America/Chicago" or "MST")..`) %}
                {%= action("UNTIL_<TIMESTAMP>", `Time until the specified timestamp (in RFC3339 or UNIX-timestamp form).`) %}
                {%= action("UNTILSHORT_<TIMESTAMP>", `Time until the specified timestamp (in RFC3339 or UNIX-timestamp form), short style.`) %}
                {%= action("UNTILLONG_<TIMESTAMP>", `Time until the specified timestamp (in RFC3339 or UNIX-timestamp form), long style.`) %}
            </dl>

            <h3>Variables, lists, and commands</h3>

            <dl>
                {%= action("VARS_<NAME>_GET", `Gets a variable.`) %}
                {%= action("VARS_<NAME>_GET_<CHANNEL>", `Gets a variable from a specific channel.`) %}
                {%= action("VARS_<NAME>_SET_<VALUE>", `Set's a variable to a value.`) %}
                {%= action("VARS_<NAME>_INCREMENT_<NUM>", `Increments a variable if it is an integer.`) %}
                {%= action("VARS_<NAME>_DECREMENT_<NUM>", `Decrements a variable if it is an integer.`) %}
                {%= action("LIST_<NAME>_RANDOM", `A random item from a list.`) %}
                {%= action("COMMAND_<COMMAND>", `Insert the specified command's response.`) %}
                {%= action("<COMMAND>_COUNT", `The number of times a command has been used.`) %}
            </dl>

            <h3>Meta</h3>

            <dl>
                {%= action("MESSAGE_COUNT", `The current message count in this channel.`) %}
                {%= action("SILENT", `Silences the message containing this action.`) %}
                {%= action("NUMCHANNELS", `The number of channels the bot is active in.`) %}
                {%= action("BOT_HELP", `The bot's help message.`) %}
                {%= action("CHANNEL_URL", `The current channel's URL.`) %}
            </dl>

            <h3>Third-party APIs</h3>

            <dl>
                {%= action("SONG", `Current song.`) %}
                {%= action("SONG_URL", `Current song's URL.`) %}
                {%= action("LAST_SONG", `The previous song.`) %}
                {%= action("EXTRALIFE_AMOUNT", `The current Extra-Life amount.`) %}
                {%= action("STEAM_PROFILE", `The link to the channel's Steam profile.`) %}
                {%= action("STEAM_GAME", `The current Steam game.`) %}
                {%= action("STEAM_SERVER", `The current Steam game's server.`) %}
                {%= action("STEAM_STORE", `A link to the current Steam game.`) %}
                {%= action("TWEET_URL", `A link to Twitter which will send a tweet about the stream.`) %}
                {%= action("TEXTAPI_<URL>", `Sends a GET request to the provided URL and returns the resulting body.`) %}
                {%= action("PESC_<TEXT>", `Path-escapes the given text.`) %}
                {%= action("QESC_<TEXT>", `Query-escapes the given text.`) %}
            </dl>
        </section>
    </div>
</div>
{% endfunc %}

{% func (p *DocsPage) PageScripts() %}
{%= p.BasePage.PageScripts() %}
{%= jqueryScript() %}
{%= gumshoeScript() %}

<script>
$(function() {
    document.addEventListener("gumshoeActivate", function(event) {
        $(event.detail.link).addClass("is-active");
    }, false);
    document.addEventListener("gumshoeDeactivate", function(event) {
        $(event.detail.link).removeClass("is-active");
    }, false);

    var header = document.querySelector("#header");
    spy = new Gumshoe("#sidebar a", {
        navClass: "is-active",
        contentClass: "is-active",
        offset: function() {
            return header.getBoundingClientRect().height;
        },
        events: true
    });

    spy.setup();
    spy.detect();

    $("#main").scroll(function() {
        spy.detect();
    });
});
</script>
{% endfunc %}

{% func command(name, desc, level string, extra ...string) %}
<dt><code>{%s name %}</code></dt>
<dd>
    <p>
        {%s= desc %}
        {%= docLevelTag(level) %}
    </p>
    {% for _, ex := range extra %}
    <p>
        {%s= ex %}
    </p>
    {% endfor %}
</dd>
{% endfunc %}

{% func action(name, desc string, extra ...string) %}
{%= command("(_" + name + "_)", desc, "", extra...) %}
{% endfunc %}

{% func docLevelTag(level string) %}
{% switch level %}
{% case "everyone" %}
<span class="tag is-light">Everyone</span>
{% case "subs" %}
<span class="tag is-info">Subs</span>
{% case "mods" %}
<span class="tag is-success">Mods</span>
{% case "broadcaster" %}
<span class="tag is-danger">Broadcaster</span>
{% case "admin" %}
<span class="tag is-black">Admins</span>
{% case "varies" %}
<span class="tag is-warning">Varies</span>
{% default %}
{% endswitch %}
{% endfunc %}
