// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package extralifemocks

import (
	"context"
	"sync"

	"github.com/hortbot/hortbot/internal/pkg/apiclient/extralife"
)

// Ensure, that APIMock does implement extralife.API.
// If this is not the case, regenerate this file with moq.
var _ extralife.API = &APIMock{}

// APIMock is a mock implementation of extralife.API.
//
//	func TestSomethingThatUsesAPI(t *testing.T) {
//
//		// make and configure a mocked extralife.API
//		mockedAPI := &APIMock{
//			GetDonationAmountFunc: func(ctx context.Context, participantID int) (float64, error) {
//				panic("mock out the GetDonationAmount method")
//			},
//		}
//
//		// use mockedAPI in code that requires extralife.API
//		// and then make assertions.
//
//	}
type APIMock struct {
	// GetDonationAmountFunc mocks the GetDonationAmount method.
	GetDonationAmountFunc func(ctx context.Context, participantID int) (float64, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetDonationAmount holds details about calls to the GetDonationAmount method.
		GetDonationAmount []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// ParticipantID is the participantID argument value.
			ParticipantID int
		}
	}
	lockGetDonationAmount sync.RWMutex
}

// GetDonationAmount calls GetDonationAmountFunc.
func (mock *APIMock) GetDonationAmount(ctx context.Context, participantID int) (float64, error) {
	if mock.GetDonationAmountFunc == nil {
		panic("APIMock.GetDonationAmountFunc: method is nil but API.GetDonationAmount was just called")
	}
	callInfo := struct {
		Ctx           context.Context
		ParticipantID int
	}{
		Ctx:           ctx,
		ParticipantID: participantID,
	}
	mock.lockGetDonationAmount.Lock()
	mock.calls.GetDonationAmount = append(mock.calls.GetDonationAmount, callInfo)
	mock.lockGetDonationAmount.Unlock()
	return mock.GetDonationAmountFunc(ctx, participantID)
}

// GetDonationAmountCalls gets all the calls that were made to GetDonationAmount.
// Check the length with:
//
//	len(mockedAPI.GetDonationAmountCalls())
func (mock *APIMock) GetDonationAmountCalls() []struct {
	Ctx           context.Context
	ParticipantID int
} {
	var calls []struct {
		Ctx           context.Context
		ParticipantID int
	}
	mock.lockGetDonationAmount.RLock()
	calls = mock.calls.GetDonationAmount
	mock.lockGetDonationAmount.RUnlock()
	return calls
}
